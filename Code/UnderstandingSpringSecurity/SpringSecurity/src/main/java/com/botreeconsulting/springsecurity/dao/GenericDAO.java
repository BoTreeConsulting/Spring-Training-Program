package com.botreeconsulting.springsecurity.dao;

import java.io.Serializable;
import java.util.List;

public interface GenericDAO<T, ID extends Serializable> {
	
	/**
	 * Persist newInstance object into Database
	 * @param newInstance
	 * @return ID generated by Database
	 */
	ID create(T newInstance);
	
	/**
	 * Retrieve an object that was previously persisted to the database using
     * the indicated id as primary key
	 * @param id primary key
	 * @return object in the database identified by id  
	 */
	T findById(ID id);
	
	/**
	 * Get all objects of the class persisted in the database. 
	 * @return
	 */
	List<T> findAll();
	
	/**
	 * get all objects of the class persisted in the database matching t.
	 * @param t example instance
	 * @return
	 */
	List<T> findByExample(T t);
	
	/**
	 * Save changes made to a persistent object.
	 * @param transientObject
	 */
	void update(T transientObject);
	
	/**
	 * Delete the persistent object.
	 * @param persistentObject
	 */
	void delete(T persistentObject);
	
	/**
	 * 
	 * @param persistentObject the persistent object
	 * 
	 * @return the total number of specified <code>persistentObject<code> 
	 * instances existing in the database or an arbitrary negative value in 
	 * case problem occurs while retrieving the count.    
	 */
	public abstract long countAll(Class<T> persistentObject);
	
	
}
